// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int          @id @default(autoincrement())
  name         String       @db.VarChar(50)
  username     String       @unique @db.VarChar(50)
  password     String
  email        String       @unique @db.VarChar(100)
  phone_number String
  created_time DateTime     @db.DateTime()
  userProfile  UserProfile?
  receipt      Receipt[]
  item         Items[]
  commnet      Comment[]
}

model UserProfile {
  id           Int       @id @default(autoincrement())
  user         User      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  user_id      Int       @unique
  seller       Int?      @db.TinyInt()
  profile_img  String?
  home_address String?
  birthday     DateTime? @db.Date
}

model Items {
  id          Int       @id @default(autoincrement())
  category_id Int
  user_id     Int
  user        User      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  item_name   String    @db.LongText
  description String    @db.LongText
  price       Decimal
  quantity    Int
  image_name  Json?
  comment     Comment[]
  cart        Cart[]
  category    Category  @relation(fields: [category_id], references: [id])
}

model Category {
  id            Int     @id @default(autoincrement())
  category_name String
  description   String?
  items         Items[]
}

model Comment {
  id             Int      @id @default(autoincrement())
  item_id        Int
  user_id        Int
  comment        String   @db.LongText
  commented_date DateTime @db.DateTime()
  items          Items    @relation(fields: [item_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  user           User     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Receipt {
  id             Int       @id @default(autoincrement())
  user_id        Int
  created_time   DateTime  @db.Date
  finished_time  DateTime? @db.Date
  check_finished Boolean   @db.TinyInt
  user           User      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  cart           Cart[]
}

model Cart {
  id         Int     @id @default(autoincrement())
  receipt_id Int
  item_id    Int
  quantity   Int
  receipt    Receipt @relation(fields: [receipt_id], references: [id])
  items      Items   @relation(fields: [item_id], references: [id])
}
